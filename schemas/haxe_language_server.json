{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "LSP settings for `haxe_language_server`",
    "properties": {
        "haxe.executable": {
            "scope": "resource",
            "markdownDescription": "Path to the Haxe executable or an object containing a Haxe executable configuration",
            "default": "auto",
            "oneOf": [
                {
                    "type": "string",
                    "markdownDescription": "Path to the Haxe executable",
                    "default": "auto",
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "auto"
                            ],
                            "markdownEnumDescriptions": [
                                "Auto-detect the Haxe executable."
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                {
                    "type": "object",
                    "markdownDescription": "Haxe executable configuration",
                    "additionalProperties": false,
                    "properties": {
                        "path": {
                            "type": "string",
                            "markdownDescription": "Path to the Haxe executable",
                            "default": "auto",
                            "anyOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "auto"
                                    ],
                                    "markdownEnumDescriptions": [
                                        "Auto-detect the Haxe executable."
                                    ]
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        },
                        "env": {
                            "markdownDescription": "Additional environment variables used for running Haxe executable",
                            "type": "object",
                            "default": {},
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "windows": {
                            "markdownDescription": "Windows-specific path to the Haxe executable or an object containing a Haxe executable configuration",
                            "default": "auto",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "markdownDescription": "Path to the Haxe executable",
                                    "default": "auto",
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "enum": [
                                                "auto"
                                            ],
                                            "markdownEnumDescriptions": [
                                                "Auto-detect the Haxe executable."
                                            ]
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "type": "object",
                                    "markdownDescription": "Overrides for Windows",
                                    "default": {},
                                    "additionalProperties": false,
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "markdownDescription": "Path to the Haxe executable",
                                            "default": "auto",
                                            "anyOf": [
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "auto"
                                                    ],
                                                    "markdownEnumDescriptions": [
                                                        "Auto-detect the Haxe executable."
                                                    ]
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "env": {
                                            "markdownDescription": "Additional environment variables used for running Haxe executable",
                                            "type": "object",
                                            "default": {},
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "linux": {
                            "markdownDescription": "Linux-specific path to the Haxe executable or an object containing a Haxe executable configuration",
                            "default": "auto",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "markdownDescription": "Path to the Haxe executable",
                                    "default": "auto",
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "enum": [
                                                "auto"
                                            ],
                                            "markdownEnumDescriptions": [
                                                "Auto-detect the Haxe executable."
                                            ]
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "type": "object",
                                    "markdownDescription": "Overrides for Linux",
                                    "default": {},
                                    "additionalProperties": false,
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "markdownDescription": "Path to the Haxe executable",
                                            "default": "auto",
                                            "anyOf": [
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "auto"
                                                    ],
                                                    "markdownEnumDescriptions": [
                                                        "Auto-detect the Haxe executable."
                                                    ]
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "env": {
                                            "markdownDescription": "Additional environment variables used for running Haxe executable",
                                            "type": "object",
                                            "default": {},
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "osx": {
                            "markdownDescription": "Mac-specific path to the Haxe executable or an object containing a Haxe executable configuration",
                            "default": "auto",
                            "oneOf": [
                                {
                                    "type": "string",
                                    "markdownDescription": "Path to the Haxe executable",
                                    "default": "auto",
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "enum": [
                                                "auto"
                                            ],
                                            "markdownEnumDescriptions": [
                                                "Auto-detect the Haxe executable."
                                            ]
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                {
                                    "type": "object",
                                    "markdownDescription": "Overrides for Mac",
                                    "default": {},
                                    "additionalProperties": false,
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "markdownDescription": "Path to the Haxe executable",
                                            "default": "auto",
                                            "anyOf": [
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "auto"
                                                    ],
                                                    "markdownEnumDescriptions": [
                                                        "Auto-detect the Haxe executable."
                                                    ]
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "env": {
                                            "markdownDescription": "Additional environment variables used for running Haxe executable",
                                            "type": "object",
                                            "default": {},
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "haxelib.executable": {
            "scope": "resource",
            "markdownDescription": "Path to the Haxelib executable",
            "type": "string",
            "default": "auto",
            "anyOf": [
                {
                    "type": "string",
                    "enum": [
                        "auto"
                    ],
                    "markdownEnumDescriptions": [
                        "Auto-detect the Haxelib executable."
                    ]
                },
                {
                    "type": "string"
                }
            ]
        },
        "haxe.configurations": {
            "markdownDescription": "Array of switchable configurations for the Haxe completion server. Each configuration is an array of command-line arguments, see item documentation for more details.",
            "type": "array",
            "default": [],
            "items": {
                "markdownDescription": "Command-line arguments passed to the Haxe completion server. Can contain HXML files. Relative paths will be resolved against workspace root.",
                "oneOf": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string",
                                "markdownDescription": "The label to use for displaying this configuration in the UI."
                            },
                            "args": {
                                "type": "array",
                                "markdownDescription": "The Haxe command-line arguments.",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "files": {
                                "type": "array",
                                "markdownDescription": "Array of files/globbing patterns where the editor should automatically select this configuration.",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "haxe.displayConfigurations": {
            "deprecationMessage": "Use \"haxe.configurations\" instead",
            "type": "array",
            "default": []
        },
        "haxe.displayServer": {
            "markdownDescription": "Haxe completion server configuration",
            "type": "object",
            "default": {},
            "additionalProperties": false,
            "properties": {
                "arguments": {
                    "markdownDescription": "Array of arguments passed to the Haxe completion server at start. Can be used for debugging completion server issues, for example by adding the `\"-v\"` argument.",
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string"
                    }
                },
                "print": {
                    "markdownDescription": "Which debug output to print to the Haxe output channel. With `-v`, all flags default to `true`, and without it to `false`. Setting a flag here overrides the default. Only works with Haxe 4.0.0-preview.4 or newer.",
                    "type": "object",
                    "default": {
                        "completion": false,
                        "reusing": false
                    },
                    "additionalProperties": false,
                    "properties": {
                        "addedDirectory": {
                            "type": "boolean"
                        },
                        "foundDirectories": {
                            "type": "boolean"
                        },
                        "changedDirectories": {
                            "type": "boolean"
                        },
                        "modulePathChanged": {
                            "type": "boolean"
                        },
                        "notCached": {
                            "type": "boolean"
                        },
                        "parsed": {
                            "type": "boolean"
                        },
                        "removedDirectory": {
                            "type": "boolean"
                        },
                        "reusing": {
                            "type": "boolean"
                        },
                        "skippingDep": {
                            "type": "boolean"
                        },
                        "unchangedContent": {
                            "type": "boolean"
                        },
                        "cachedModules": {
                            "type": "boolean"
                        },
                        "arguments": {
                            "type": "boolean"
                        },
                        "completion": {
                            "type": "boolean"
                        },
                        "defines": {
                            "type": "boolean"
                        },
                        "signature": {
                            "type": "boolean"
                        },
                        "displayPosition": {
                            "type": "boolean"
                        },
                        "stats": {
                            "type": "boolean"
                        },
                        "message": {
                            "type": "boolean"
                        },
                        "socketMessage": {
                            "type": "boolean"
                        },
                        "uncaughtError": {
                            "type": "boolean"
                        },
                        "newContext": {
                            "type": "boolean"
                        }
                    }
                },
                "useSocket": {
                    "markdownDescription": "If possible, use a socket for communication with Haxe rather than stdio.",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "haxe.displayHost": {
            "markdownDescription": "IP address to use for display server. Can be used to `--connect` Haxe build commands.",
            "type": "string",
            "default": "127.0.0.1"
        },
        "haxe.displayPort": {
            "markdownDescription": "Integer value for the port to open on the display server, or `\"auto\"`. Can be used to `--connect` Haxe build commands.",
            "default": "auto",
            "oneOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "string",
                    "enum": [
                        "auto"
                    ]
                }
            ]
        },
        "haxe.enableCompilationServer": {
            "markdownDescription": "Use the extension's Haxe server to compile auto-generated tasks. Requires `\"haxe.displayPort\"` to be set.",
            "type": "boolean",
            "default": true
        },
        "haxe.taskPresentation": {
            "markdownDescription": "Configures which presentation options to use for generated tasks by default (see `presentation` in `tasks.json`).",
            "type": "object",
            "default": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "additionalProperties": false,
            "properties": {
                "echo": {
                    "markdownDescription": "Controls whether the executed command is echoed to the panel. Default is `true`.",
                    "type": "boolean",
                    "default": true
                },
                "reveal": {
                    "markdownDescription": "Controls whether the panel running the task is revealed or not. Default is `\"always\"`.",
                    "type": "string",
                    "default": "always",
                    "enum": [
                        "always",
                        "silent",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "Always reveals the terminal when this task is executed.",
                        "Only reveals the terminal if no problem matcher is associated with the task and an errors occurs executing it.",
                        "Never reveals the terminal when this task is executed."
                    ]
                },
                "focus": {
                    "markdownDescription": "Controls whether the panel takes focus. Default is `false`. If set to `true` the panel is revealed as well.",
                    "type": "boolean",
                    "default": false
                },
                "panel": {
                    "markdownDescription": "Controls if the panel is shared between tasks, dedicated to this task or a new one is created on every run.",
                    "type": "string",
                    "default": "shared",
                    "enum": [
                        "shared",
                        "dedicated",
                        "new"
                    ]
                },
                "showReuseMessage": {
                    "markdownDescription": "Controls whether to show the `Terminal will be reused by tasks, press any key to close it` message.",
                    "type": "boolean",
                    "default": true
                },
                "clear": {
                    "markdownDescription": "Controls whether the terminal is cleared before executing the task.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "haxe.enableCodeLens": {
            "markdownDescription": "Enable code lens to show some statistics",
            "type": "boolean",
            "default": false
        },
        "haxe.enableDiagnostics": {
            "markdownDescription": "Enable automatic diagnostics of Haxe files, run automatically on open and save.",
            "type": "boolean",
            "default": true
        },
        "haxe.enableServerView": {
            "markdownDescription": "Enable the \"Haxe Server\" view container for performance and cache debugging.",
            "type": "boolean",
            "default": false
        },
        "haxe.enableMethodsView": {
            "type": "boolean",
            "default": false,
            "deprecationMessage": "Use \"haxe.enableServerView\" instead"
        },
        "haxe.serverRecording": {
            "markdownDescription": "Options for compilation server recording",
            "type": "object",
            "default": {
                "enabled": false,
                "path": ".haxelsp/recording/",
                "watch": [],
                "exclude": [],
                "excludeUntracked": false
            },
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "markdownDescription": "Enable recording of communication with Haxe Server to produce reproducible logs.",
                    "type": "boolean",
                    "default": false
                },
                "path": {
                    "markdownDescription": "Root folder to use to save data related to server recording.",
                    "type": "string",
                    "default": ".haxelsp/recording/"
                },
                "exclude": {
                    "markdownDescription": "Do not track these files in git/svn logged changes.",
                    "type": "array",
                    "default": []
                },
                "excludeUntracked": {
                    "markdownDescription": "Do not add untracked files to recording.",
                    "type": "boolean",
                    "default": false
                },
                "watch": {
                    "markdownDescription": "Additional paths to watch for changes (e.g. resources used for compilation)",
                    "type": "array",
                    "default": []
                }
            }
        },
        "haxe.enableSignatureHelpDocumentation": {
            "markdownDescription": "Whether signature help should include documentation or not.",
            "type": "boolean",
            "default": true
        },
        "haxe.diagnosticsPathFilter": {
            "markdownDescription": "A regex that paths of source files have to match to be included in diagnostics. Defaults to `\"${workspaceRoot}\"` so only files within your workspace are included. You can use `\"${haxelibPath}/<library-name>\"` to only show results for a specific haxelib. Use `\".*?\"` to see all results, including haxelibs.",
            "type": "string",
            "default": "${workspaceRoot}"
        },
        "haxe.diagnosticsForAllOpenFiles": {
            "markdownDescription": "When using Haxe >= 4.3.5, diagnostics will run for all open Haxe files instead of current file unless this option is set to false",
            "type": "boolean",
            "default": true
        },
        "haxe.buildCompletionCache": {
            "markdownDescription": "Speed up completion by building the project once on startup to initialize the cache.",
            "type": "boolean",
            "default": true
        },
        "haxe.enableCompletionCacheWarning": {
            "markdownDescription": "Whether a warning popup should be shown if the completion cache build has failed.",
            "type": "boolean",
            "default": true
        },
        "haxe.useLegacyCompletion": {
            "markdownDescription": "Whether to revert to a Haxe 3 style completion where only toplevel packages and imported types are shown (effectively making it incompatible with auto-imports). *Note:* this setting has no effect with Haxe versions earlier than 4.0.0-rc.4.",
            "type": "boolean",
            "default": false
        },
        "haxe.useLegacyDiagnostics": {
            "markdownDescription": "Haxe 4.3.5 introduces new Json RPC based diagnostics. in order to be able to opt out of them set option to true. *Note:* will stop working on nightlies once #11413 gets merged",
            "type": "boolean",
            "default": false
        },
        "haxe.codeGeneration": {
            "markdownDescription": "Options for code generation",
            "type": "object",
            "default": {},
            "additionalProperties": false,
            "properties": {
                "functions": {
                    "markdownDescription": "Options for generating functions",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                        "anonymous": {
                            "markdownDescription": "Options for generating anonymous functions",
                            "type": "object",
                            "default": {},
                            "additionalProperties": false,
                            "properties": {
                                "returnTypeHint": {
                                    "markdownDescription": "In which case to include return type hints",
                                    "type": "string",
                                    "default": "never",
                                    "enum": [
                                        "always",
                                        "never",
                                        "non-void"
                                    ]
                                },
                                "argumentTypeHints": {
                                    "markdownDescription": "Whether to include type hints for arguments",
                                    "type": "boolean",
                                    "default": false
                                },
                                "useArrowSyntax": {
                                    "markdownDescription": "Whether to use arrow function syntax (Haxe 4+)",
                                    "type": "boolean",
                                    "default": true
                                },
                                "explicitNull": {
                                    "markdownDescription": "Whether to wrap types in `Null<T>` even if it can be omitted (for optional arguments with `?`)",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "field": {
                            "markdownDescription": "Options for generating field-level functions",
                            "type": "object",
                            "default": {},
                            "additionalProperties": false,
                            "properties": {
                                "returnTypeHint": {
                                    "markdownDescription": "In which case to include return type hints",
                                    "type": "string",
                                    "default": "non-void",
                                    "enum": [
                                        "always",
                                        "never",
                                        "non-void"
                                    ]
                                },
                                "argumentTypeHints": {
                                    "markdownDescription": "Whether to include type hints for arguments",
                                    "type": "boolean",
                                    "default": true
                                },
                                "placeOpenBraceOnNewLine": {
                                    "markdownDescription": "Whether to place `{` in a new line",
                                    "type": "boolean",
                                    "default": false
                                },
                                "explicitPublic": {
                                    "markdownDescription": "Whether to include the public visibility modifier even if it can be omitted",
                                    "type": "boolean",
                                    "default": false
                                },
                                "explicitPrivate": {
                                    "markdownDescription": "Whether to include the private visibility modifier even if it can be omitted",
                                    "type": "boolean",
                                    "default": false
                                },
                                "explicitNull": {
                                    "markdownDescription": "Whether to wrap types in `Null<T>` even if it can be omitted (for optional arguments with `?`)",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                },
                "imports": {
                    "markdownDescription": "Options for generating imports",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                        "enableAutoImports": {
                            "markdownDescription": "Whether to insert an import automatically when selecting a not-yet-imported type from completion. If `false`, the fully qualified name is inserted instead.",
                            "type": "boolean",
                            "default": true
                        },
                        "style": {
                            "markdownDescription": "How to deal with module subtypes when generating imports.",
                            "type": "string",
                            "default": "type",
                            "enum": [
                                "type",
                                "module"
                            ],
                            "markdownEnumDescriptions": [
                                "Import only the specific sub-type (`import pack.Foo.Type`).",
                                "Import the entire module the sub-type lives in (`import pack.Foo`)."
                            ]
                        }
                    }
                },
                "switch": {
                    "markdownDescription": "Options for generating switch expressions",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                        "parentheses": {
                            "markdownDescription": "Whether to wrap the switch subject in parentheses",
                            "type": "boolean",
                            "default": false
                        }
                    }
                }
            }
        },
        "haxe.exclude": {
            "markdownDescription": "A list of dot paths (packages, modules, types) to exclude from classpath parsing, completion and workspace symbols. Can be useful to improve performance.",
            "type": "array",
            "default": [
                "zpp_nape"
            ]
        },
        "haxe.postfixCompletion": {
            "markdownDescription": "Options for postfix completion",
            "type": "object",
            "default": {},
            "additionalProperties": false,
            "properties": {
                "level": {
                    "markdownDescription": "Which kinds of postfix completions to include",
                    "type": "string",
                    "default": "full",
                    "enum": [
                        "full",
                        "filtered",
                        "off"
                    ],
                    "markdownEnumDescriptions": [
                        "Show all postfix completion items.",
                        "Only show items that apply to specific types like `for` and `switch`.",
                        "Disable postfix completion."
                    ]
                }
            }
        },
        "haxe.enableBraceBodyWrapping": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Add closing brace at the end of one-line `if/for/while` body expressions"
        },
        "haxe.enableExtendedIndentation": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Align new line brackets with Allman style. Can have typing overhead and is incompatible with the Vim extension."
        },
        "haxe.maxCompletionItems": {
            "type": "integer",
            "default": 1000,
            "markdownDescription": "Upper limit for the number of completion items that can be shown at once."
        },
        "haxe.renameSourceFolders": {
            "markdownDescription": "Folders to look for renamable identifiers. Rename will not see or touch files outside of those folders.",
            "type": "array",
            "default": [
                "src",
                "source",
                "Source",
                "test",
                "tests"
            ]
        },
        "haxe.disableRefactorCache": {
            "markdownDescription": "Disable refactor / rename cache. Will also disbale all rename and refactor options (and inline value feature).",
            "type": "boolean",
            "default": false
        },
        "haxe.disableInlineValue": {
            "markdownDescription": "Disable inline value feature. Stops value annotations from showing up during debugging.",
            "type": "boolean",
            "default": true
        },
        "haxe.importsSortOrder": {
            "markdownDescription": "Sort order of imports",
            "type": "string",
            "default": "all-alphabetical",
            "enum": [
                "all-alphabetical",
                "stdlib -> libs -> project",
                "non-project -> project"
            ]
        },
        "haxe.inlayHints": {
            "markdownDescription": "Options for inlay hints feature",
            "type": "object",
            "default": {
                "variableTypes": false,
                "parameterNames": false,
                "parameterTypes": false,
                "functionReturnTypes": false,
                "conditionals": false
            },
            "additionalProperties": false,
            "properties": {
                "variableTypes": {
                    "markdownDescription": "Show inlay hints for variables",
                    "type": "boolean",
                    "default": false
                },
                "parameterNames": {
                    "markdownDescription": "Show inlay hints for parameter names",
                    "type": "boolean",
                    "default": false
                },
                "parameterTypes": {
                    "markdownDescription": "Show inlay hints for parameter types",
                    "type": "boolean",
                    "default": false
                },
                "functionReturnTypes": {
                    "markdownDescription": "Show inlay hints for function return types",
                    "type": "boolean",
                    "default": false
                },
                "conditionals": {
                    "markdownDescription": "Show inlay hints for conditionals",
                    "type": "boolean",
                    "default": false
                }
            }
        }
    }
}