{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "LSP settings for `kotlin_language_server`",
    "properties": {
        "kotlin.java.home": {
            "type": "string",
            "default": "",
            "description": "A custom JAVA_HOME for the language server and debug adapter to use."
        },
        "kotlin.java.opts": {
            "type": "string",
            "default": "",
            "description": "Custom options using JAVA_OPTS for the language server and debug adapter."
        },
        "kotlin.languageServer.enabled": {
            "type": "boolean",
            "default": true,
            "description": "[Recommended] Specifies whether the language server should be used. When enabled the extension will provide code completions and linting, otherwise just syntax highlighting. Might require a reload to apply."
        },
        "kotlin.languageServer.path": {
            "type": "string",
            "default": "",
            "description": "Optionally a custom path to the language server executable."
        },
        "kotlin.languageServer.transport": {
            "type": "string",
            "enum": [
                "stdio",
                "tcp"
            ],
            "description": "The transport layer beneath the language server protocol. Note that the extension will launch the server even if a TCP socket is used.",
            "default": "stdio"
        },
        "kotlin.languageServer.port": {
            "type": "integer",
            "description": "The port to which the client will attempt to connect to. A random port is used if zero. Only used if the transport layer is TCP.",
            "default": 0
        },
        "kotlin.languageServer.debugAttach.enabled": {
            "type": "boolean",
            "description": "[DEBUG] Whether the language server should listen for debuggers, i.e. be debuggable while running in VSCode. This is ONLY useful if you need to debug the language server ITSELF.",
            "default": false
        },
        "kotlin.languageServer.debugAttach.port": {
            "type": "integer",
            "description": "[DEBUG] If transport is stdio this enables you to attach to the running language server with a debugger. This is ONLY useful if you need to debug the language server ITSELF.",
            "default": 5005
        },
        "kotlin.languageServer.debugAttach.autoSuspend": {
            "type": "boolean",
            "description": "[DEBUG] If enabled (together with debugAttach.enabled), the language server will not immediately launch but instead listen on the specified attach port and wait for a debugger. This is ONLY useful if you need to debug the language server ITSELF.",
            "default": false
        },
        "kotlin.languageServer.watchFiles": {
            "type": "array",
            "default": [
                "**/*.kt",
                "**/*.kts",
                "**/*.java",
                "**/pom.xml",
                "**/build.gradle",
                "**/settings.gradle"
            ],
            "description": "Specifies glob patterns of files, which would be watched by LSP client. The LSP client doesn't support watching files outside a workspace folder."
        },
        "kotlin.trace.server": {
            "type": "string",
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VSCode and the Kotlin language server.",
            "scope": "window"
        },
        "kotlin.codegen.enabled": {
            "type": "boolean",
            "description": "Whether to enable code generation to a temporary build output directory for Java interoperability (via the non-standard kotlin/buildOutputLocation LSP method). Experimental.",
            "default": false
        },
        "kotlin.compiler.jvm.target": {
            "type": "string",
            "default": "default",
            "description": "Specifies the JVM target, e.g. \"1.6\" or \"1.8\""
        },
        "kotlin.diagnostics.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Whether diagnostics (e.g. errors or warnings from the Kotlin compiler) should be emitted."
        },
        "kotlin.diagnostics.level": {
            "type": "string",
            "default": "hint",
            "enum": [
                "error",
                "warning",
                "information",
                "hint"
            ],
            "description": "The minimum severity of diagnostics to emit."
        },
        "kotlin.diagnostics.debounceTime": {
            "type": "integer",
            "default": 250,
            "description": "[DEBUG] Specifies the debounce time limit. Lower to increase responsiveness at the cost of possible stability issues."
        },
        "kotlin.linting.debounceTime": {
            "type": "integer",
            "default": 250,
            "deprecationMessage": "The option has been renamed to `kotlin.diagnostics.debounceTime`",
            "description": "[DEBUG] Specifies the debounce time limit. Lower to increase responsiveness at the cost of possible stability issues."
        },
        "kotlin.scripts.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Whether language features are provided for .kts scripts. Experimental and may not work properly."
        },
        "kotlin.scripts.buildScriptsEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Whether language features are provided for .gradle.kts scripts. Experimental and may not work properly."
        },
        "kotlin.indexing.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Whether global symbols in the project should be indexed automatically in the background. This enables e.g. code completion for unimported classes and functions."
        },
        "kotlin.completion.snippets.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Specifies whether code completion should provide snippets (true) or plain-text items (false)."
        },
        "kotlin.debugAdapter.enabled": {
            "type": "boolean",
            "default": true,
            "description": "[Recommended] Specifies whether the debug adapter should be used. When enabled a debugger for Kotlin will be available."
        },
        "kotlin.debugAdapter.path": {
            "type": "string",
            "default": "",
            "description": "Optionally a custom path to the debug adapter executable."
        },
        "kotlin.debounceTime": {
            "type": "integer",
            "default": 250,
            "description": "[DEPRECATED] Specifies the debounce time limit. Lower to increase responsiveness at the cost of possible stability issues.",
            "deprecationMessage": "Use 'kotlin.linting.debounceTime' instead"
        },
        "kotlin.externalSources.useKlsScheme": {
            "type": "boolean",
            "default": true,
            "description": "[Recommended] Specifies whether URIs inside JARs should be represented using the 'kls'-scheme."
        },
        "kotlin.externalSources.autoConvertToKotlin": {
            "type": "boolean",
            "default": false,
            "description": "Specifies whether decompiled/external classes should be auto-converted to Kotlin."
        },
        "kotlin.snippetsEnabled": {
            "type": "boolean",
            "default": true,
            "description": "[DEPRECATED] Specifies whether code completion should provide snippets (true) or plain-text items (false).",
            "deprecationMessage": "Use 'kotlin.completion.snippets.enabled'"
        },
        "kotlin.inlayHints.typeHints": {
            "type": "boolean",
            "default": false,
            "description": "Whether to provide inlay hints for types on declaration sites or not."
        },
        "kotlin.inlayHints.parameterHints": {
            "type": "boolean",
            "default": false,
            "description": "Whether to provide inlay hints for parameters on call sites or not."
        },
        "kotlin.inlayHints.chainedHints": {
            "type": "boolean",
            "default": false,
            "description": "Whether to provide inlay hints on chained function calls or not."
        }
    }
}