--- @class Schemas
Schemas = {
    schemas = {}
}
Schemas.__index = Schemas

--- @return Schemas
function Schemas:new()
    local o = {
        schemas = {}
    }

    setmetatable(o, self)

    return o
end

--- Scans `./schemas` directory and forms list of available schemas.
---
function Schemas:load()
    -- TODO: keep the whole list inside LUA module.
    -- Module itself should be generated by CI

    local init_lua_path = debug.getinfo(1).source:sub(2)
    local lspsettings_path = vim.fs.dirname(init_lua_path)
    local lua_path = vim.fs.dirname(lspsettings_path)
    local plugin_path = vim.fs.dirname(lua_path)
    local schemas_path = vim.fs.joinpath(plugin_path, "schemas")

    local files = vim.fs.dir(schemas_path, {
        depth  = 1,
        follow = false,
    })

    for name, type in files do
        if type == "file" and name:sub(-5) == ".json" then
            local server_name = name:sub(1, -6)
            local file_path = vim.fs.abspath(vim.fs.joinpath(schemas_path, name))

            self.schemas[server_name] = {
                fileMatch = { name },
                url = "/" .. file_path,
            }
        end
    end
end

--- Applies given schemas list to `jsonls`
function Schemas:apply()
    vim.lsp.config('jsonls', {
        settings = {
            json = {
                schemas = vim.tbl_values(self.schemas),
            },
        },
    })
end

return Schemas
